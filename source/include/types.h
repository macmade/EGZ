/*******************************************************************************
 * Copyright (c) 2010, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id$ */

/*!
 * @header      types.h
 * @copyright   (c) 2011 - Jean-David Gadina - www.xs-labs.com
 * @abstract    Program's type definitions
 */

#ifndef _EGZ_TYPES_H_
#define _EGZ_TYPES_H_
#pragma once

#ifdef __cplusplus
extern "C" {
#endif

    typedef enum
    {
        EGZ_OK                      = 0x000,
        EGZ_ERROR_MALLOC            = 0x001,
        EGZ_ERROR_EMPTY_FILE        = 0x002,
        EGZ_ERROR_INVALID_FORMAT    = 0x003,
        EGZ_ERROR_INVALID_CHECKSUM  = 0x004,
        EGZ_ERROR_ABORT             = 0x005,
        EGZ_ERROR_INVALID_TREE      = 0x006,
        EGZ_ERROR_UNKNOWN           = 0x666
    }
    egz_status;

    typedef struct _egz_cli_args
    {
        bool   compress;
        bool   expand;
        bool   force;
        bool   version;
        bool   help;
        bool   debug;
        char * source;
    }
    egz_cli_args;

    typedef struct _egz_symbol
    {
        unsigned char            character;
        unsigned int             id;
        unsigned int             bits;
        uint64_t                 code;
        unsigned long            occurences;
        double                   frequency;
        double                   information;
        double                   entropy;
        struct _egz_symbol * parent;
        struct _egz_symbol * left;
        struct _egz_symbol * right;
    }
    egz_symbol;
    
    typedef struct _egz_table
    {
        egz_symbol     symbols[ 256 ];
        unsigned int   count;
        unsigned long  total;
        double         information;
        double         entropy;
    }
    egz_table;

#ifdef __cplusplus
}
#endif

#endif /* _EGZ_TYPES_H_ */

